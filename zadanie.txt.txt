### 🧩 **Mini Pokedex App**

**Goal:** Test ability to work with external APIs, dynamic lists, component composition, and basic routing.

---

### 📝 Task Description:

Build a small web application that fetches data from the public PokéAPI ([https://pokeapi.co/](https://pokeapi.co/)) and
displays a list of Pokémon. Each item in the list should be clickable, opening a detailed view of the selected Pokémon.

---

### ✅ Requirements:

1. **Fetch Data from API**

    * Use the PokéAPI to get a list of Pokémon (e.g. first 20 or 50).
    * Show basic info: name, image.

2. **Display List of Pokémon**

    * Use cards or a list format.
    * Each item should be clickable.

3. **Details Page**

    * On click, navigate to a Pokémon details page (`/pokemon/:id` or `/pokemon/:name`).
    * Show more information: types, stats, abilities, etc.

4. **Loading and Error States**

    * Show a loading indicator while fetching data.
    * Display an error message if the API request fails.

5. **Use React Router**

    * Implement routing to navigate between the list and detail views.

---

### 🎁 Bonus (Optional):

* Use TypeScript
* Add search/filter by name
* Pagination or infinite scroll
* Use MUI, Tailwind CSS, or CSS Modules for styling
* Responsive design (mobile-friendly)
* Deploy the project (e.g., Vercel/Netlify)

---

### 💡 Tech Guidelines:

* Use React (v18+)
* No external state management (like Redux)
* Keep code modular and well-organized
* All features must work

---

### 🚀 Submission:

* Push the code to a GitHub repository
* Include a `README.md` with:

    * Setup instructions
    * A link to a live version (if deployed)